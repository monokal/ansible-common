---

# Hostname

- name: amend_hosts_file
  template:
    src:    hosts.j2
    dest:   /etc/hosts
    owner:  root
    group:  root
    mode:   "u=rw,g=r,o=r"

- name: amend_hostname_file
  copy:
    content: "{{ short_hostname }}"
    dest:    /etc/hostname
    owner:   root
    group:   root
    mode:    "u=rw,g=r,o=r"

- name: amend_runtime_hostname
  hostname:
    name: "{{ short_hostname }}"

# MOTD

- name: remove_motd
  file:
    path: "{{ item }}"
    state: absent
  with_items:
    - "/etc/update-motd.d/00-header"
    - "/etc/update-motd.d/10-help-text"
    - "/etc/update-motd.d/50-landscape-sysinfo"

- name: amend_motd
  template:
    src:    00-monokal-header.j2
    dest:   /etc/update-motd.d/00-monokal-header
    owner:  root
    group:  root
    mode:   "u=rwx,g=rx,o=rx"

# Upgrade

- name: upgrade_system
  apt:
    update_cache: yes
    upgrade: dist
  register: upgrade_system

# Packages

- name: install_packages
  when: upgrade_system|success
  apt:
    name: "{{ item }}"
  with_items:
    - "ntp"
    - "htop"
    - "wget"
    - "curl"
    - "git"
    - "fail2ban"
    - "sendmail"
    - "lxc"
    - "ufw"
  register: install_packages

# Configure UFW

- name: ufw_allow
  when: install_packages|success
  ufw:
    rule: allow
    port: "{{ item }}"
  with_items:
    - "22"
  register: ufw_allow

- name: ufw_enable
  when: install_packages|success and ufw_allow|success
  ufw:
    logging: "on"
    state:   enabled
    policy:  reject

# Install Docker

- name: install_docker
  when: install_packages|success
  shell: "curl -sSL https://get.docker.com/ | sh"

# Configure NTP

- name: ntp_set_timezone
  when: install_packages|success
  copy:
    content: "Europe/London"
    dest:    /etc/timezone
    owner:   root
    group:   root
    mode:    "u=rwx,g=r,o=r"
  register: ntp_set_timezone

- name: ntp_reconfigure_timezone
  when: install_packages|success and ntp_set_timezone|success
  command: "sudo dpkg-reconfigure --frontend noninteractive tzdata"

# Configure Vim

- name: create_vim_dirs
  file:
    path:   "{{ item }}"
    state:  directory
  with_items:
    - "/root/.vim"
    - "/root/.vim/colors"
  register: create_vim_dirs

- name: configure_vim_theme
  when: install_packages|success and create_vim_dirs|success
  copy:
    src:    molokai.vim
    dest:   /root/.vim/colors/molokai.vim
    owner:  root
    group:  root
    mode:   "u=rwx,g=r,o=r"

- name: configure_vimrc
  when: install_packages|success and create_vim_dirs|success
  copy:
    src:    vimrc
    dest:   /root/.vimrc
    owner:  root
    group:  root
    mode:   "u=rwx,g=r,o=r"
  register: configure_vimrc

- name: clone_vundle 
  when: install_packages|success and create_vim_dirs|success
  git:
    repo: https://github.com/gmarik/Vundle.vim.git
    dest: /root/.vim/bundle/Vundle.vim
  register: clone_vundle

- name: install_vundle
  when: configure_vimrc|success and clone_vundle|success
  command: "sudo vim +PluginInstall +qall"
